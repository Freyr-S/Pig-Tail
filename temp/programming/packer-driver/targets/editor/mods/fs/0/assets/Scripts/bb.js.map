{"version":3,"sources":["file:///C:/NewProject/assets/Scripts/bb.ts"],"names":["_decorator","Animation","tween","Vec3","Component","Node","instantiate","Prefab","ccclass","property","Bb","type","getRandomArr","array","Array","i","sort","Math","random","initCard","j","Cards","Tails","card","Back","Bg","addChild","parent","setPosition","cos","PI","sin","setScale","setRotationFromEuler","on","EventType","TOUCH_END","event","removeFromParent","tail","anim","getComponent","play","setTimeout","self1","children","active","to","position","repeat","start","pauseSystemEvents","level","bg_wnode","shipnode"],"mappings":"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","sourcesContent":["\nimport { _decorator,Animation,tween,Vec3,v2,v3,UIOpacity, Component, Node, resources, instantiate, director,Canvas, SpriteFrame,Sprite, Texture2D, Prefab,find, } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = Battle1\n * DateTime = Sun Oct 10 2021 23:16:08 GMT+0800 (中国标准时间)\n * Author = Freyr_S\n * FileBasename = battle1.ts\n * FileBasenameNoExtension = battle1\n * URL = db://assets/Scripts/battle1.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\n//enum CardSuit{\n//  spade=1,\n//  heart=2,\n//  club=3,\n//  diamond=4,\n//} \n\n@ccclass('Bb')\nexport class Bb extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    @property({type:Node})\n      public bg_wnode = null;\n    @property({type:Node})\n      public shipnode = null;\n    // serializableDummy = 0;\n    @property({type:Node})\n      Bg=null;\n    @property({type:Node})\n      private tail=null;\n      /*\n    @property({type:Prefab})\n      private poker1 = null;\n    @property({type:Prefab})\n      private poker2 = null; \n    @property({type:Prefab})\n      private poker3 = null; \n    @property({type:Prefab})\n      private poker4 = null; \n    @property({type:Prefab})\n      private poker5 = null; \n    @property({type:Prefab})\n      private poker6 = null; \n    @property({type:Prefab})\n      private poker7 = null; \n    @property({type:Prefab})\n      private poker8 = null; \n    @property({type:Prefab})\n      private poker9 = null; \n    @property({type:Prefab})\n      private poker10 = null; \n    @property({type:Prefab})\n      private poker11 = null; \n    @property({type:Prefab})\n      private poker12 = null; \n    @property({type:Prefab})\n      private poker13 = null; \n    @property({type:Prefab})\n      private poker14 = null; \n    @property({type:Prefab})\n      private poker15 = null; \n    @property({type:Prefab})\n      private poker16 = null; \n    @property({type:Prefab})\n      private poker17 = null; \n    @property({type:Prefab})\n      private poker18 = null; \n    @property({type:Prefab})\n      private poker19 = null; \n    @property({type:Prefab})\n      private poker20 = null; \n    @property({type:Prefab})\n      private poker21 = null; \n    @property({type:Prefab})\n      private poker22 = null; \n    @property({type:Prefab})\n      private poker23 = null; \n    @property({type:Prefab})\n      private poker24 = null; \n    @property({type:Prefab})\n      private poker25 = null; \n    @property({type:Prefab})\n      private poker26 = null; \n    @property({type:Prefab})\n      private poker27 = null; \n    @property({type:Prefab})\n      private poker28 = null; \n    @property({type:Prefab})\n      private poker29 = null; \n    @property({type:Prefab})\n      private poker30 = null; \n    @property({type:Prefab})\n      private poker31 = null; \n    @property({type:Prefab})\n      private poker32 = null; \n    @property({type:Prefab})\n      private poker33 = null; \n    @property({type:Prefab})\n      private poker34 = null; \n    @property({type:Prefab})\n      private poker35 = null; \n    @property({type:Prefab})\n      private poker36 = null; \n    @property({type:Prefab})\n      private poker37 = null; \n    @property({type:Prefab})\n      private poker38 = null; \n    @property({type:Prefab})\n      private poker39 = null; \n    @property({type:Prefab})\n      private poker40 = null; \n    @property({type:Prefab})\n      private poker41 = null;   \n    @property({type:Prefab})\n      private poker42 = null; \n    @property({type:Prefab})\n      private poker43 = null; \n    @property({type:Prefab})\n      private poker44 = null; \n    @property({type:Prefab})\n      private poker45 = null; \n    @property({type:Prefab})\n      private poker46 = null; \n    @property({type:Prefab})\n      private poker47 = null; \n    @property({type:Prefab})\n      private poker48 = null; \n    @property({type:Prefab})\n      private poker49 = null; \n    @property({type:Prefab})\n      private poker50 = null; \n    @property({type:Prefab})\n      private poker51 = null; \n    @property({type:Prefab})\n      private poker52 = null; \n      */\n    @property({type:Prefab})\n      private Back=null;\n\n\n    //随机打乱数组\n    getRandomArr():number[]{\n      var array:number[]=new Array;\n      let i:number;\n      for(i=1;i<=52;i++){\n        array[i]=i;\n      }\n      array.sort(function(){return 0.5-Math.random();});\n      return array;\n    }\n    //初始化卡牌组\n    initCard(){\n      let j:number;\n      var array:number[]=new Array;\n      var Cards:Node[]=[];//卡组\n      var Tails:Node[]=[];//放置区\n      /*\n      array=this.getRandomArr();\n      for(j=1;j<=52;j++){\n        //var node:Node=instantiate(this.poker);\n        //node.getComponent(\"Prefab\").SpritFrame=new SpriteFrame()\n        //var pfront:Node = node.getComponent('front').SpriteFrame;\n        //pfront.cc.Sprite\n        var i=array[j];\n        var name:String;\n        //黑桃\n        if(i>=1&&i<=13){\n          //let node:Node=instantiate(this.poker_spade);\n          name=\"spade\";\n        }\n        //红心\n        if(i>=14&&i<=26){\n          //let node:Node=instantiate(this.poker_heart);\n          name=\"heart\";\n        }\n        //梅花\n        if(i>=27&&i<=39){\n          //var node:Node=instantiate(this.poker_club);\n          name=\"club\";\n        }\n        //方块\n        if(i>=40&&i<=52){\n          //var node:Node=instantiate(this.poker_diamond);\n          name=\"diamond\";\n        }\n        //实例化预制体\n        switch(name){\n          case \"spade\":{\n            var node:Node;\n            node.name=\"spade\";\n            switch(i){\n              case 1:{\n                node=instantiate(this.poker1);\n              }\n              case 2:{\n                node=instantiate(this.poker2);\n              }\n              case 3:{\n                node=instantiate(this.poker3);\n              }\n              case 4:{\n                node=instantiate(this.poker4);\n              }\n              case 5:{\n                node=instantiate(this.poker5);\n              }\n              case 6:{\n                node=instantiate(this.poker6);\n              }\n              case 7:{\n                node=instantiate(this.poker7);\n              }\n              case 8:{\n                node=instantiate(this.poker8);\n              }\n              case 9:{\n                node=instantiate(this.poker9);\n              }\n              case 10:{\n                node=instantiate(this.poker10);\n              }\n              case 11:{\n                node=instantiate(this.poker11);\n              }\n              case 12:{\n                node=instantiate(this.poker12);\n              }\n              case 13:{\n                node=instantiate(this.poker13);\n              }\n            break;\n            }\n          }\n          case \"heart\":{\n            var node:Node;\n            node.name=\"heart\";\n            switch(i){\n              case 14:{\n                node=instantiate(this.poker14);\n              }\n              case 15:{\n                node=instantiate(this.poker15);\n              }\n              case 16:{\n                node=instantiate(this.poker16);\n              }\n              case 17:{\n                node=instantiate(this.poker17);\n              }\n              case 18:{\n                node=instantiate(this.poker18);\n              }\n              case 19:{\n                node=instantiate(this.poker19);\n              }\n              case 20:{\n                node=instantiate(this.poker20);\n              }\n              case 21:{\n                node=instantiate(this.poker21);\n              }\n              case 22:{\n                node=instantiate(this.poker22);\n              }\n              case 23:{\n                node=instantiate(this.poker23);\n              }\n              case 24:{\n                node=instantiate(this.poker24);\n              }\n              case 25:{\n                node=instantiate(this.poker25);\n              }\n              case 26:{\n                node=instantiate(this.poker26);\n              }\n            break;\n            }\n          }\n          case \"club\":{\n            var node:Node;\n            node.name=\"club\";\n            switch(i){\n              case 27:{\n                node=instantiate(this.poker27);\n              }\n              case 28:{\n                node=instantiate(this.poker28);\n              }\n              case 29:{\n                node=instantiate(this.poker29);\n              }\n              case 30:{\n                node=instantiate(this.poker30);\n              }\n              case 31:{\n                node=instantiate(this.poker31);\n              }\n              case 32:{\n                node=instantiate(this.poker32);\n              }\n              case 33:{\n                node=instantiate(this.poker33);\n              }\n              case 34:{\n                node=instantiate(this.poker34);\n              }\n              case 35:{\n                node=instantiate(this.poker35);\n              }\n              case 36:{\n                node=instantiate(this.poker36);\n              }\n              case 37:{\n                node=instantiate(this.poker37);\n              }\n              case 38:{\n                node=instantiate(this.poker38);\n              }\n              case 39:{\n                node=instantiate(this.poker39);\n              }\n            break;\n            }\n          }\n          case \"diamond\":{\n            var node:Node;\n            node.name=\"diamond\";\n            switch(i){\n              case 40:{\n                node=instantiate(this.poker40);\n              }\n              case 41:{\n                node=instantiate(this.poker41);\n              }\n              case 42:{\n                node=instantiate(this.poker42);\n              }\n              case 43:{\n                node=instantiate(this.poker43);\n              }\n              case 44:{\n                node=instantiate(this.poker44);\n              }\n              case 45:{\n                node=instantiate(this.poker45);\n              }\n              case 46:{\n                node=instantiate(this.poker46);\n              }\n              case 47:{\n                node=instantiate(this.poker47);\n              }\n              case 48:{\n                node=instantiate(this.poker48);\n              }\n              case 49:{\n                node=instantiate(this.poker49);\n              }\n              case 50:{\n                node=instantiate(this.poker50);\n              }\n              case 51:{\n                node=instantiate(this.poker51);\n              }\n              case 52:{\n                node=instantiate(this.poker52);\n              }\n            break;\n            }\n          }\n        }\n        this.Bg.addChild(node);\n        node.parent=this.Bg;\n        node.setPosition(0+114.4*Math.cos(Math.PI/2+Math.PI*(0.03846)*j),9.244+114.4*Math.sin(Math.PI/2+Math.PI*(0.03846)*j));\n        node.setScale(0.3,0.3);\n        node.setRotationFromEuler(0,0,6.923*j);\n        node.active=true;\n        Cards[j]=node;\n      }\n      */\n     for(var i=0;i<52;i++)\n     {\n      let card:Node = instantiate(this.Back);\n      var Cards:Node[]=[];\n      this.Bg.addChild(card);\n      card.parent=this.Bg;\n      card.setPosition(0+114.4*Math.cos(Math.PI/2+Math.PI*(0.03846)*i),9.244+114.4*Math.sin(Math.PI/2+Math.PI*(0.03846)*i));\n      card.setScale(0.37,0.37);\n      //card.is3DNode=true;\n      card.setRotationFromEuler(0,0,6.923*i);\n      Cards[i]=card;\n      card.on(Node.EventType.TOUCH_END,(event)=>{\n          card.removeFromParent();\n          this.tail.addChild=card;\n          card.parent=this.tail;\n          Tails[i]=card;\n          let anim=card.getComponent(Animation);\n          anim.play('turn_over1');\n          setTimeout(()=>{\n            let self1=card.children[0];\n            self1.active=true;\n            anim.play('turn_over2');\n            tween(card)\n              .to(1,{position:new Vec3(0,9.244,0)})\n              .repeat(1)\n              .start()\n        },100);\n          card.pauseSystemEvents(true);\n      },card); \n     }\n    }\n    \n\n    //onLoad(){}\n\n    start () {\n        // [3]\n        var level=0;\n        setTimeout(()=>{this.bg_wnode.active=false;\n            this.shipnode.active=false;level+=1;},4500);\n        while(level==0){};\n        setTimeout(()=>{\n          this.initCard();\n        },5000);\n\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}